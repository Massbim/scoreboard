import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import Swal from "sweetalert2";
import Cookies from "js-cookie";
import { useRouter } from "next/router";
import Logo from "../assets/Icon.svg";
import React, { Fragment, useState } from "react";
import styles from "../styles/Login.module.css";

const LoginForm = () => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const router = useRouter();

  const handleLogin = async (e) => {
    e.preventDefault();

    // Replace with your actual backend API URL
    const apiUrl = "http://localhost:8000/auth/login";

    try {
      const response = await axios.post(apiUrl, { username, password });

      if (response.status === 200) {
        Swal.fire({
          title: "Login success",
          icon: "success",
        });
        // Successful login
        const data = response.data;

        // Store the token in localStorage or a state management solution (e.g., Redux)
        localStorage.setItem("token", data.token);
        Cookies.set("token", data.token, { expires: 7 }); // Expires in 7 days

        // Redirect to a protected route or dashboard
        router.push("/admin");
        setIsAuthenticated(true);
      } else {
        // Handle unsuccessful login
        console.error("Login failed");
      }
      // console.log("username:", username);
      // console.log("Password:", password);
    } catch (error) {
      Swal.fire({
        title: `${error}`,
        icon: "error",
      });
      // Handle errors (e.g., network issues, server errors)
      console.error("Error during login:", error);
    }
  };

  return (
    <Fragment>
      <Head>
        <title>Scoreboard - Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icon-logo.ico" />
      </Head>
      <div>
        {/* component */}
        <link
          href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
          rel="stylesheet"
        />
        <div
          className="bg-no-repeat bg-cover bg-center relative"
          style={{
            backgroundImage:
              "url(https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1951&q=80)",
          }}
        >
          <div className="absolute bg-gradient-to-b from-green-500 to-green-400 opacity-75 inset-0 z-0" />
          <div className="min-h-screen sm:flex sm:flex-row mx-0 justify-center">
            <div className="flex-col flex  self-center p-10 sm:max-w-5xl xl:max-w-2xl  z-10">
              <div className="self-start hidden lg:flex flex-col  text-white">
                <img src className="mb-3" />
                <h1 className="mb-3 font-bold text-5xl">Hi, Welcome Back</h1>
                <p className="pr-3">
                  Lorem ipsum is placeholder text commonly used in the graphic,
                  print, and publishing industries for previewing layouts and
                  visual mockups
                </p>
              </div>
            </div>
            <div className="flex justify-center self-center  z-10">
              <div className="p-12 bg-white mx-auto rounded-2xl w-100 ">
                <div className="mb-4">
                  <h3 className="font-semibold text-2xl text-gray-800">
                    Sign In
                  </h3>
                  <p className="text-gray-500">
                    Please sign in to your account.
                  </p>
                </div>
                <form onSubmit={handleLogin}>
                  <div className="space-y-5">
                    <div className="space-y-2">
                      <label className="text-sm font-medium text-gray-700 tracking-wide">
                        username
                      </label>
                      <input
                        value={username}
                        onChange={(e) => setUsername(e.target.value)}
                        className="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
                        type="text"
                        placeholder="username"
                      />
                      {/* <label className="text-sm font-medium text-gray-700 tracking-wide">
                        Username
                      </label>
                      <input
                        className=" w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
                        type
                        placeholder="mail@gmail.com"
                      /> */}
                    </div>
                    <div className="space-y-2">
                      <label className="mb-5 text-sm font-medium text-gray-700 tracking-wide">
                        Password
                      </label>
                      <input
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        className="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
                        type="password"
                        placeholder="Enter your password"
                      />
                    </div>
                    <div className="flex items-center justify-between">
                      <div className="flex items-center">
                        <input
                          id="remember_me"
                          name="remember_me"
                          type="checkbox"
                          className="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
                        />
                        <label
                          htmlFor="remember_me"
                          className="ml-2 block text-sm text-gray-800"
                        >
                          Remember me
                        </label>
                      </div>
                      <div className="text-sm">
                        <a
                          href="#"
                          className="text-green-400 hover:text-green-500"
                        >
                          Forgot your password?
                        </a>
                      </div>
                    </div>
                    <div>
                      <button
                        type="submit"
                        className="w-full flex justify-center bg-green-400 hover:bg-green-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
                      >
                        Sign in
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Fragment>
  );
};

export default LoginForm;
